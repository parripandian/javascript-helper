{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Literal",
                  "value": "use strict",
                  "raw": "'use strict'"
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "angular"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "module"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "module.sample",
                          "raw": "'module.sample'"
                        }
                      ]
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "service"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "SampleConstant",
                      "raw": "'SampleConstant'"
                    },
                    {
                      "type": "Identifier",
                      "name": "SampleConstant"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "SampleConstant"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "$inject"
                    }
                  },
                  "right": {
                    "type": "ArrayExpression",
                    "elements": []
                  }
                }
              },
              {
                "type": "FunctionDeclaration",
                "id": {
                  "type": "Identifier",
                  "name": "SampleConstant"
                },
                "params": [],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "constant"
                          },
                          "init": {
                            "type": "ThisExpression"
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "constant"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "SHOW_MESSAGE_FOR_SAMPLE"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "sample",
                          "raw": "\"sample\""
                        }
                      }
                    }
                  ]
                },
                "generator": false,
                "expression": false
              }
            ]
          },
          "generator": false,
          "expression": false
        },
        "arguments": []
      }
    }
  ],
  "sourceType": "script"
}